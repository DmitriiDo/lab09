name: CI

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: chekout
      uses: actions/checkout@v2

    - name: install docker
      shell: bash
      run: |
        # sudo apt-get install ca-certificates curl gnupg lsb-release
        # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        # echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        # sudo apt-get update
        # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
        # sudo docker run hello-world
        # sudo apt-get install docker
        echo "skip"

    - name: container project
      shell: bash
      run: |
        # docker build -t logger .
        echo skip


    - name: version
      run: echo "::set-output name=version::v0.1.0.0"
      # run: echo "v0.1.0.0"
      id: version
    # - name: Create Release
    #   uses: ncipollo/release-action@v1.10.0
    #   id: create_release
    #   with:
    #     draft: false
    #     prerelease: false
    #     name: ${{ steps.version.outputs.version }}
    #     tag: ${{ github.ref }}
    #     body_path: ChangeLog.md
    #     allowUpdates: true
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    - name: upl
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "./_build/*.tar.gz"
        bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./_build/banking-0.1.0.0-Linux.tar.gz
        asset_name: _build/*.tar.gz
        asset_content_type: application/gzip
